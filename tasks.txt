1) Прочиать про клиент-серверную архитектуру

2) Что такое HTTP и HTTPS - это протоколы передачи данных между серверами и клиентом, https - 
использует шифрование при передачи данных (ssl сертификат)

3) HTTP методы: GET - получает информацию от сервера по заданному URL, POST отправляет данные на сервер,
DELETE удаляет данные которые указаны в URL, OPTIONS - получает параметры текущего HTTP соединения

4) HTTP статус коды сервера - ответ сервера при запросах по протоколу HTTP
   1. Информационные 100 - 199
   2. Успешные 200 - 299
   3. Перенаправления 300 - 399
   4. Клиентские ошибки 400 - 499
   5. Серверные ошибки 500 - 599

5) Что такое ядро браузера - это программа, которая отвечает за обработку веб-страницы. Движок
рендеринга обрабатывает HTML-код, преобразует код в привычное для пользователей представление.
Движок JS анализирует язык и выполняет javascript код, благодаря чему появляется динамика веб-страницы.

6) Какие браузеры какиие ядра используют 
   1. Trient - Internet Explorer (IE)
   2. EdgeHTML - Microsoft Edge
   3. Gecko - Mozilla FireFox
   4. WebKit - Safari
   5. Chromium/Bink - Chrome
   6. Presto - Opera

7) Что такое API - набор инструментов, который помогает взаимодействовать программам между собой

8. Что такое ендпоинты - это адреса, на которые посылаются сообщения.
Endpoint = Base URL + Resource
https://andreyolegovich.ru:8080/resource1/status
https://andreyolegovich.ru:8080 - Base URL
/resource1/status - Resource

9) URL (URI, URL, URN)
   1. URL - Uniform Resource Locator (унифицированный определитель местонахождения ресурса). URL определяет
      местонахождение ресурса в сети и способ его извлечения.
   2. URN - Unifrorm Resource Name (унифицированное имя ресурса). URN неизменяемая последовательность
      символов, определяющая только имя ресурса. Им единоразово и уникально именуется какая либо сущность.
   3. URI - Uniform Resource Identifier (унифицированный идентификатор ресурса). URI обобщенное понятие
      идентификации ресурса, включающее как URL, так и URN совместно и по отдельности:
      URI = URL / URI = URN / URI = URL+URN


10) Идемпотентные HTTP методы - это метод, при котором повторный идентичный запрос имеет один и тот же
    эффект, то есть не изменяет состояние сервера: GET, HEAD, PUT, DELETE. Также безопасные методы.

11) Безопасные HTTP методы - методы, которые не меняют состояние сервера, проводят операции "только чтение".
    GET, HEAD, OPTIONS - безопасные и идемпотентные; PUT, DELETE - небезопасные и идемпотентные. 

12) Иденфикация, Аутентификация, Авторизация
    1. Идентификация - это процедура, в результате которой для субъекта идентификации выявляется его
       идентификатор, определяющий субъект в ИС. 
       Пример: Для начала система запрашивает логин, пользователь его указывает, система распознает его
       как существующий — это идентификация.
    2. Аутентификация - процедура проверки подленности.
       Пример: После этого Google просит ввести пароль, пользователь его вводит, и система соглашается,
       что пользователь, похоже, действительно настоящий, раз пароль совпал, — это аутентификация.
    3. Авторизация - предоставление определенному лицу или группе лиц прав на выполнение определенных
       действий.
       Пример: После этого система предоставит пользователю право читать письма в его почтовом ящике
       и все в таком духе — это авторизация.

13) Что такое IP - это уникальный адрес, идентифицирующий устройство в глобальной или локальной сети.

14) Что такое октаты в DNS - октет представляет собой 8-битное количество

15) Что такое порт, сколько портов у Linux сервера
    Порт - это число, которое идентифицирует назначение сетевых потоков данных в пределах одного
    компьютера.
    Количество портов ограничено с учетом 16-битной адресации, т.е. 2^16 = 65536

16) Уровни OSI
    1) Физический уровень - отвечает за обмен физическими сигналами между физическими устройствами
    2) Канальный уровень - 2 подуровня: MAC, LLC. MAC отвечает за присвоение физических MAC-адресов,
       а LLC занимается проверкой и исправлением данных, управляет их передачей
    3) Сетевой уровень - маршрутизаторы (роутеры) получают MAC-адрес от коммутаторов с предыдущего
       уровня, строят маршрут от одного устройства к другому. С помощью протокола ARP 64-битные
       MAC-адреса преобразуются в 32-битные IP-адреса и наоборот - инкапсуляция и декапсуляция
    4) Транспортный уровень - передача пакетов данных с помощью TCP протокола.
    5) Сеансовый уровень - отвечает за поддержку сеанса или сессии связи.
    6) Представление данных - представляет данные в понятному человеку и машине виде.
    7) Прикладной уровень - то с чем взаимодействуют пользователи, т.е. задача - использовать
       свои протоколы, чтобы пользователь увидел данные в понятном ему виде

17) Хедеры http запросов - сопровождают обмен данными по протоколу HTTP.
    1) Основные - применяются к запросам и ответам, не имеют отношения к данным в body
    2) Заголовки запроса - содержат информацию о  ресурсе, который нужно получить, или
       о клиенте, который запрашивает ресурс
    3) Заголовки ответа - содержат доп. информацию об ответе (местонахождение к примеру)
       или о сервере, предоставившим его
    4) Заголовки сущности - содержат информацию о теле ресурса (к примеру длину содержимого)